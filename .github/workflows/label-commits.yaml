name: Label PR Based on Commit Messages

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  label_pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags

      - name: Fetch main branch
        run: |
          # Fetch the main branch to ensure it is available for comparison
          git fetch origin main:main

      - name: Fetch all commits for the PR
        run: |
          # Check out the PR branch and compare commits against main
          commits=$(git log main..HEAD --pretty=format:"%s")
          echo "Commits: $commits"

          # Initialize labels
          LABELS=""

          # Check commit messages and set labels
          if [[ "$commits" =~ feat ]]; then
            LABELS="$LABELS,enhancement"
          fi
          if [[ "$commits" =~ fix ]]; then
            LABELS="$LABELS,bug"
          fi
          if [[ "$commits" =~ chore ]]; then
            LABELS="$LABELS,chore"
          fi
          if [[ "$commits" =~ build ]]; then
            LABELS="$LABELS,build"
          fi
          if [[ "$commits" =~ ci ]]; then
            LABELS="$LABELS,ci"
          fi
          if [[ "$commits" =~ docs ]]; then
            LABELS="$LABELS,documentation"
          fi
          if [[ "$commits" =~ perf ]]; then
            LABELS="$LABELS,perf"
          fi
          if [[ "$commits" =~ refactor ]]; then
            LABELS="$LABELS,refactor"
          fi
          if [[ "$commits" =~ revert ]]; then
            LABELS="$LABELS,revert"
          fi
          if [[ "$commits" =~ style ]]; then
            LABELS="$LABELS,style"
          fi
          if [[ "$commits" =~ test ]]; then
            LABELS="$LABELS,test"
          fi

          # Remove leading comma
          LABELS=$(echo $LABELS | sed 's/^,//')

          # Export labels as an environment variable
          echo "LABELS=$LABELS" >> $GITHUB_ENV

      - name: Add labels to PR using REST API
        if: env.LABELS != ''
        run: |
          curl -s -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            --data "{\"labels\": [${{ toJson(env.LABELS) }}]}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/labels"
